# nextjs/docker-compose.dev.yml
services:
  mongo-dev:
    image: mongo:latest
    container_name: mongo-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo-data-dev:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=false"

  nextjs-app-dev:
    build: ./app-next-dev
    container_name: nextjs-app-dev
    ports:
      - "${DEV_NEXTJS_PORT}:3000"
    depends_on:
      - mongo-dev
    environment:
      - MONGO_URI=${DEV_MONGO_URI}
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./app-next-dev/pages:/app/pages
      - ./app-next-dev/public:/app/public
      - ./app-next-dev/styles:/app/styles
      - ./app-next-dev/package.json:/app/package.json
      - ./app-next-dev/next.config.mjs:/app/next.config.mjs
      - ./app-next-dev/postcss.config.js:/app/postcss.config.js
      - ./app-next-dev/tailwind.config.js:/app/tailwind.config.js
    networks:
      - proxy
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.app-dev.rule=Host(`${DEV_NEXTJS_DOMAIN}`)"
      - "traefik.http.routers.app-dev.entrypoints=web"
      - "traefik.http.routers.app-dev-secure.entrypoints=websecure"
      - "traefik.http.routers.app-dev-secure.rule=Host(`${DEV_NEXTJS_DOMAIN}`)"
      - "traefik.http.routers.app-dev-secure.tls=true"
      - "traefik.http.routers.app-dev-secure.tls.certresolver=selfSigned"
      
networks:
  proxy:
    external: true

volumes:
  mongo-data-dev:
